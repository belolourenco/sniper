#!/bin/bash

# run.sh
#
# ----------------------------------------------------------------------
#                SNIPER : Automatic Fault Localization 
#
# Copyright (C) 2016 Si-Mohamed LAMRAOUI
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program (see LICENSE.TXT).  
# If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------
#
# \author Si-Mohamed LAMRAOUI
# \date   30 March 2016

#TIMEFORMAT='%3U,  %3S';

if [ $# -lt 3 ]
then 
  echo "error (x_X)"
  exit 0
fi

# Check if SNIPER binarie exists
if [ ! -f src/sniper ]; then
    echo "SNIPER binarie not found!"
    exit 1
fi

clang $2 -S -emit-llvm -O0 -gline-tables-only -o $2.bc 
echo "Bitecode generated"

# Bytecode file exists
if [ -f $2.bc ]
then
	case $3 in
	"1")
    	# Concolic execution with 
    	# Full Flow-sensitive Trace Formula (FFTF)
		#time ./src/sniper -mhs -dbg-msg -v -inst -ce -function $1 -cfile $2 $2.bc
		time ./src/sniper -pwu -ce -v -function $1 -cfile $2 $2.bc
   		;;
	"2")
		# Concolic execution with 
		# Hardened Flow-sensitive Trace Formula (HFTF)
		#time ./src/sniper -inst -ce -htf -function $1 -cfile $2 $2.bc 
		time ./src/sniper -line -print-dura -dbg-msg -v  -htf -ce -function $1 -cfile $2 $2.bc
    	;;
	"3")
    	# BMC
    	time ./src/sniper -unroll 30 -dbg-msg -v -inst -bmc -function $1 -cfile $2 $2.bc 
    	;;
    "4")
    	# TCAS/IO - FFTF
    	#time ./src/sniper -dbg-msg -v -inst -ce -function $1 -cfile $2 $2.bc -loc 173 -ts ./examples/tcas_nomain_ret/testcases-argok.txt -go ./examples/tcas_nomain_ret/golden_outputs.txt 
    	time ./src/sniper -dbg-msg -v -inst -ce -function $1 -cfile $2 $2.bc -loc 173 -ts ../sniper_examples/tcas_nomain_ret/testcases-argok.txt -go ../sniper_examples/tcas_nomain_ret/golden_outputs.txt 
    	;;
    "5")
    	# TCAS/IO - HFTF
    	time ./src/sniper -dbg-msg -v -inst -ce -htf -function $1 -cfile $2 $2.bc -loc 173 -ts ../sniper_examples/tcas_nomain_ret/testcases-argok.txt -go ../sniper_examples/tcas_nomain_ret/golden_outputs.txt
    	;;
    "8")
      # VCGens
      ./src/sniper -vcgen -function=$1 -cfile=$2 -execute_bench=false -unwind_ann=$4 -unroll=$5 -method=$6 -print-intermediateIR=false -gen_why3=$7 -gen_SMTLib2=$8 $2.bc
      ;;
    "9")
      # Run as a benchmark
      ./src/sniper -vcgen -function=$1 -cfile=$2 -execute_bench=true  -unwind_ann=$4 -unroll=$5 -method=$6 -print-intermediateIR=false -gen_why3=$7 -gen_SMTLib2=$8 $2.bc
      ;;
    *)
    	echo "invalid option (x_X)"
    	;;
    esac
fi
rm $2.bc

